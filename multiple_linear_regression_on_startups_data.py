# -*- coding: utf-8 -*-
"""multiple_linear_regression_on_startups_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OJQQhAQM5qpiJJPudkYja065bew3NTB8

#ðŸŒ¸ Forouzan Fallah ðŸŒ¸

Github: Forouzanfallah

Personal Website: Forouzanfallah.ir

Don't hesitate to contact me for any further questions â˜º

# Multiple Linear Regression

we call it "multiple **linear** regression"
because the relation between the Y and the coefficients which we want to learn (and are our unknowns) is a linear relation.

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv('50_Startups.csv')

"""##Separate the features and label"""

X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

"""### About our Dataset"""

print(X)

"""## Encoding categorical data

###importing related libreries
"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

"""#### Encoding categorical data on feature **matrix**"""

ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [3])], remainder='passthrough')
X = np.array(ct.fit_transform(X))

"""### About our Dataset after encoding the string names

these 3 first columns are insted of those names
"""

print(X)

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)

"""## Training the Multiple Linear Regression model on the Training set"""

from sklearn.linear_model import LinearRegression
nultiple_regressor = LinearRegression()
nultiple_regressor.fit(X_train, y_train)

"""## Predicting the Test set results"""

y_pred = nultiple_regressor.predict(X_test)
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

"""because we have more than 2 features, it is not available to visualize it like the simple linear regression. """